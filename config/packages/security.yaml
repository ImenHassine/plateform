security:
    encoders:
        FOS\UserBundle\Model\UserInterface: bcrypt
        Symfony\Component\Security\Core\User\User: plaintext

    role_hierarchy:
        ROLE_ADMIN:         ROLE_USER
        ROLE_SUPER_ADMIN:   ROLE_ADMIN

    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        chain_provider:
            chain:
                providers: [in_memory, fos_userbundle]
        in_memory:
            memory:
                users:
                    superadmin:
                        password: 'superadminpwd'
                        roles: ['ROLE_SUPER_ADMIN']
        fos_userbundle:
            id: fos_user.user_provider.username

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        login:
            pattern: ^/auth/login
            stateless: true
            anonymous: true
            json_login:
                provider: chain_provider
                check_path: /auth/login
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure
            provider: chain_provider
        register:
            pattern:  ^/auth/register
            stateless: true
            anonymous: true
        doc:
            pattern:  ^/doc
            stateless: true
            anonymous: true
        files:
            pattern:  ^/files
            stateless: true
            anonymous: true
        open:
            pattern:  ^/open
            stateless: true
            anonymous: true
        main:
            pattern: ^/
            stateless: true
            anonymous: false
            provider: chain_provider
            guard:
                authenticators:
                    - lexik_jwt_authentication.jwt_token_authenticator

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/doc, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/files, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/open, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/auth/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/auth/register, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/, roles: IS_AUTHENTICATED_FULLY }
        - { path: ^/secure, roles: IS_AUTHENTICATED_FULLY }
